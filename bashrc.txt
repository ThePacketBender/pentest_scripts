####    set variable $LAST each time a command execution is execute to store stdout
####    usage: echo "$LAST" > some.file
PROMPT_COMMAND='LAST="`cat /tmp/x`"; exec >/dev/tty; exec > >(tee /tmp/x)'

####	unified function to extract any archive calling the extension-appropriate program
function extract {
 if [ -z "$1" ]; then
    # display usage
    echo "Usage: extract <path/to/file>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz|jar|docx>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    return 1
 else
    for n in $@
    do
      if [ -f "$n" ] ; then
          case "${n%,}" in
            *.tar.bz2|*.tar.gz|*.tar.xz|*.tar.lzma|*.tbz2|*.tgz|*.txz|*.tlz|*.tar) 
                        tar xvf "$n"		;;
            *.lzma)     unlzma ./"$n"		;;
			*.lz)		lzip -d ./"$n"		;;
            *.bz2)      bunzip2 ./"$n"		;;
            *.rar)      unrar x -ad ./"$n"	;;
            *.gz)       gunzip ./"$n"		;;
            *.zip|*.jar|*.war|*.docx) unzip ./"$n"	;;
            *.z)        uncompress ./"$n"	;;
            *.7z|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar|*.z|*.Z)
						7z x ./"$n"			;;
            *.xz)       unxz ./"$n"			;;
            *.exe)      cabextract ./"$n"	;;
			*.shar)		bash ./"$n"			;;
			*.sz)		snappy ./"$n"		;;	## https://github.com/klauspost/compress https://github.com/google/snappy
			*.a|*.ar|*.lib)  ar x ./"$n"		;;
            *)
                        echo "extract: '$n' - extension unknown"
                        return 1
                        ;;
          esac
      else
          echo "'$n' DNE"
          return 1
      fi
    done
fi
}

#### quick greping function for tarball-type archives
function grep-archive() {
	for i in $(tar -tzf "$1"); do results=$(tar -Oxzf "$1" "$i" | grep --label="$i" -H "$2") && echo "$results"; done
}

## count number of files in a directory defaulting to pwd
countfiles() { 
    n="$(ls -a $1 | wc -l)"; 
    echo "$n files in $1";
}

## create directory and change pwd to created directory
mkcd() { mkdir -p $1; cd $1 }

## swap names of too files
nameswap()
{
	local TMPFILE=tmp.$$
	mv "$1" $TMPFILE
	mv "$2" "$1"
	mv $TMPFILE "$2"
}
